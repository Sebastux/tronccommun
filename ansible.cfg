[defaults]

pattern         = *
http_user_agent = ansible-agent
inventory       = inventory
library         = library
ficscommun      = ficscommun
#module_utils   = /usr/share/my_module_utils/
remote_tmp      = /var/tmp
local_tmp       = /var/tmp
#forks          = 5
#poll_interval  = 15
#sudo_user      = root
#ask_sudo_pass  = True
ask_pass        = False
transport       = smart
remote_port     = 22
#module_lang     = fr_FR.utf8
#module_set_locale = False

# plays will gather facts by default, which contain information about
# the remote system.
#
# smart - gather by default, but don't regather if already gathered
# implicit - gather by default, turn off with gather_facts: False
# explicit - do not gather by default, must say gather_facts: True
gathering = smart
fact_caching = jsonfile
fact_caching_connection = /var/tmp/facts_cache
fact_caching_timeout = 7200

# additional paths to search for roles in, colon separated
roles_path    = roles/

# Chemin des modules ansible
collections_path=/usr/local/lib/python3.10/site-packages/ansible_collections
#collections_path=~/.ansible/collections:/usr/share/ansible/collections

# uncomment this to disable SSH key host checking
host_key_checking = False

# change the default callback
stdout_callback = skippy
# enable additional callbacks
callbacks_enabled = profile_tasks, timer

# What flags to pass to sudo
# WARNING: leaving out the defaults might create unexpected behaviours
#sudo_flags = -H -S -n

# SSH timeout
timeout = 10

# default user to use for playbooks if user is not specified
# (/usr/bin/ansible will use current user as default)
remote_user = root

# logging is off by default unless this path is defined
# if so defined, consider logrotate
#log_path = /travail/Ansible/logs/ansible.log

# If set, configures the path to the Vault password file as an alternative to
# specifying --vault-password-file on the command line.
vault_password_file = passwd.txt

# format of string {{ ansible_managed }} available within Jinja2
# templates indicates to users editing templates files will be replaced.
# replacing {file}, {host} and {uid} and strftime codes with proper values.
#ansible_managed = Ansible managed: {file} modified on %Y-%m-%d %H:%M:%S by {uid} on {host}
# {file}, {host}, {uid}, and the timestamp can all interfere with idempotence
# in some situations so the default is a static string:
ansible_managed = Ce fichier est généré par ansible. Toute modification de celui-ci sera définitivement perdu à la prochaine exécution du playbook sur cette machine.

# don't like cows?  that's unfortunate.
# set to 1 if you don't want cowsay support or export ANSIBLE_NOCOWS=1
nocows = 1

# retry files
# When a playbook fails by default a .retry file will be created in ~/
# You can disable this feature by setting retry_files_enabled to False
# and you can change the location of the files by setting retry_files_save_path

retry_files_enabled = False
#retry_files_save_path = ~/.ansible-retry

# controls whether Ansible will raise an error or warning if a task has no
# choice but to create world readable temporary files to execute a module on
# the remote machine.  This option is False by default for security.  Users may
# turn this on to have behaviour more like Ansible prior to 2.1.x.  See
# https://docs.ansible.com/ansible/become.html#becoming-an-unprivileged-user
# for more secure ways to fix this than enabling this option.
allow_world_readable_tmpfiles = False

# controls the compression level of variables sent to
# worker processes. At the default of 0, no compression
# is used. This value must be an integer from 0 to 9.
var_compression_level = 9

# Découverte automatique de l'interpreteur python.
interpreter_python = auto_silent

# Affichage des hôtes non traités
display_skipped_hosts = yes

# Affichage des hôtes traités
display_ok_hosts = yes

[privilege_escalation]
#become=True
#become_method=sudo
#become_user=root
#become_ask_pass=False

[ssh_connection]

# Control the mechanism for transferring files (old)
#   * smart = try sftp and then try scp [default]
#   * True = use scp only
#   * False = use sftp only
scp_if_ssh = smart

# Control the mechanism for transferring files (new)
# If set, this will override the scp_if_ssh option
#   * sftp  = use sftp to transfer files
#   * scp   = use scp to transfer files
#   * piped = use 'dd' over SSH to transfer files
#   * smart = try sftp, scp, and piped, in that order [default]
transfer_method = smart

[persistent_connection]

# Configures the persistent connection timeout value in seconds.  This value is
# how long the persistent connection will remain idle before it is destroyed.
# If the connection doesn't receive a request before the timeout value
# expires, the connection is shutdown.  The default value is 30 seconds.
connect_timeout = 30

# Configures the persistent connection retries.  This value configures the
# number of attempts the ansible-connection will make when trying to connect
# to the local domain socket.  The default value is 30.
connect_retries = 30

# Configures the amount of time in seconds to wait between connection attempts
# to the local unix domain socket.  This value works in conjunction with the
# connect_retries value to define how long to try to connect to the local
# domain socket when setting up a persistent connection.  The default value is
# 1 second.
connect_interval = 1

[colors]
highlight = white
verbose = blue
warn = bright purple
error = red
debug = dark gray
deprecate = purple
skip = cyan
unreachable = red
ok = green
changed = yellow
diff_add = green
diff_remove = red
diff_lines = cyan

[callback_profile_tasks ]
sort_order = none
